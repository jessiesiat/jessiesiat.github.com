I"›<p>As a PHP developer you may have read about <a href="http://www.php-fig.org/">PHP-FIG</a>. It is a group of people working together in creating standards on how we write PHP code. PHP audience may opt to adopt what they are doing but that is not the aim as what the group say. But why not!</p>

<p>One of the accepted standard is <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md">PSR-0</a> on autoloading namespace class. You may ask how to implement this easily and the answer is <a href="http://getcomposer.org/">Composer</a>!</p>

<p>Just run this command and your ready to go!</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php composer.phar dump-autoload
</code></pre></div></div>

<p>Well use <a href="http://laravel.com/">Laravel</a> here as our example. Now lets have it step by step, say you have already a fresh install of laravel. Letâ€™s now create a namespace class inside the app folder with this structure.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/app
	/Auto
		/Load
			Something.php
	/commands
	/config
	/controllers
	/database
	/lang
	/models
	/start
	/storage
	/test
	/views
	filters.php
	routes.php
/bootstrap
/public
/vendor
.
composer.json
.
.
</code></pre></div></div>

<p>As you can see our added Class is:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>app/Auto/Load/Something.php
</code></pre></div></div>

<p>Say the content of our Class is this. Take a look at the namespace keyword on top.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php namespace Auto\Load;

class Something {

	public function sayHi()
	{
		return 'Hello?';
	}

}
</code></pre></div></div>

<p>Ok now letâ€™s create a route inside our routes file utilizing the Class we have just created.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php

//routes.php

Route::get('load', function()
{
	$my_class = new Auto\Load\Something;

	return $my_class-&gt;sayHi();
});
</code></pre></div></div>

<p>We will now update our composer.json to something like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
	"autoload": {
		"psr-0": {
			"Auto": "app/"
		}
	}
}
</code></pre></div></div>

<p>In here weâ€™re saying to load using psr-0 anything under namespace Auto inside our app folder.</p>

<p>Getting excited! lets look at it now in our browser(yourapp.com/load)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Class 'Auto\Load\Something' not found
</code></pre></div></div>

<p>Ooops! It is because we did not execute composer dump-autoload in our project root as what I have said earlier.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>php composer.phar dump-autoload
</code></pre></div></div>

<blockquote>
  <p>If not using <a href="http://laravel.com/">Laravel</a> you may bootstrap the 
autoload file generated by composer with <code class="language-plaintext highlighter-rouge">require 'vendor/autoload.php';</code>.
Else if using Laravel, Symphony, etc. then donâ€™t sweat it, it is already 
bootstrap for you!</p>
</blockquote>

<p>Now when we see it again in our browser it will return</p>

<p>Hello?</p>

<p>Thatâ€™s it! Pretty simple and I know experienced php developers are already aware of this very much but this post are for those who are to learn yet. Hope you discover something new today!</p>

:ET